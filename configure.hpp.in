#ifndef CONFIGURE_HPP
#define CONFIGURE_HPP

// macros
#define ON 1
#define OFF 0

// MPI parallel flag
#define @MPIOption@

// HARP package
#define ENABLE_HARP @UseHarp@

// CLIASTRO package
#define ENABLE_CLIASTRO  @UseCliAstro@

// precision
#define SINGLE_PRECISION @SinglePrecision@


#if SINGLE_PRECISION
  using Real = float;
  #ifdef MPI_PARALLEL
    #define MPI_REAL MPI_FLOAT
    #define MPI_REAL_INT MPI_FLOAT_INT
  #endif
#else
  using Real = double;
  #ifdef MPI_PARALLEL
    #define MPI_REAL MPI_DOUBLE
    #define MPI_REAL_INT MPI_DOUBLE_INT
  #endif
#endif

// variables
enum VariableType {prim, cons, chem};

// ghost zone size (uniform)
enum {
  GhostZoneSize = @GhostZoneSize@
};

// size of array
enum {
  NumVapors = @NumVapors@,
  NumPhases = 3,
  NumClouds = @NumClouds@,
  NumTracers = @NumTracers@,
};

// derived sizes
enum {
  NumHydros = 5 + NumVapors,
};

// hydro primitive indices
enum {
  idn = 0,
  iv1 = 1 + NumVapors,
  iv2 = 2 + NumVapors,
  iv3 = 3 + NumVapors,
  ipr = 4 + NumVapors,
};

// hydro conserved indices
enum {
  im1 = 1 + NumVapors,
  im2 = 2 + NumVapors,
  im3 = 3 + NumVapors,
  ien = 4 + NumVapors,
};

// constants
namespace Globals {
  double const ReferencePressure = @ReferencePressure@;
  double const PressureScaleHeight = @PressureScaleHeight@;
}

enum {
  ReferenceCloudPhase = @ReferenceCloudPhase@
};

// molecule ids
namespace MoleculeIDs {
  enum {
    water_vapor_id = -1,
    ammonia_vapor_id = -1
  };
}

// hydrostatic flag
#define HYDROSTATIC @Hydrostatic@

#define NETCDFOUTPUT @UseNetCDF@

// PNetCDF output flag
#define PNETCDFOUTPUT @UsePNetCDF@

#endif
